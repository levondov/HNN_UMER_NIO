function aspsr_v2simple(varargin)
% Lattice definition file - generated by dimad2at v1.300000 

global FAMLIST THERING GLOBVAL

GLOBVAL.E0 = 3e9;
GLOBVAL.LatticeFile = 'aspsr_v2simple';
FAMLIST = cell(0);

disp(' ');
disp('*** Loading lattice from aspsr_v2simple.m ***');

bpm	=	monitor('bpm'	,'IdentityPass');
d1	=	drift('d1'	,2.698286e+000,'DriftPass');
d2	=	drift('d2'	,1.900000e-001,'DriftPass');
d3	=	drift('d3'	,1.650000e-001,'DriftPass');
d4	=	drift('d4'	,2.750000e-001,'DriftPass');
d5	=	drift('d5'	,1.550000e-001,'DriftPass');
d6	=	drift('d6'	,4.500000e-001,'DriftPass');
dip	=	rbend('dip'	,1.726000e+000,2.243995e-001,1.121997e-001,1.121997e-001,-3.349992e-001,'BndMPoleSymplectic4Pass');
q1	=	quadrupole('q1'	,3.550000e-001,1.761741e+000,'QuadLinearPass');
q2	=	quadrupole('q2'	,1.800000e-001,-1.038377e+000,'QuadLinearPass');
q3	=	quadrupole('q3'	,3.550000e-001,1.533802e+000,'QuadLinearPass');
s1	=	sextupole('s1'	,1.000000e-001,1.400000e+001,'StrMPoleSymplectic4Pass');
FAMLIST{s1}.ElemData.PolynomB(3) = 1.400000e+001;
s2	=	sextupole('s2'	,1.000000e-001,-1.400000e+001,'StrMPoleSymplectic4Pass');
FAMLIST{s2}.ElemData.PolynomB(3) = -1.400000e+001;
s3	=	sextupole('s3'	,1.000000e-001,-7.014635e+000,'StrMPoleSymplectic4Pass');
FAMLIST{s3}.ElemData.PolynomB(3) = -7.014635e+000;
s4	=	sextupole('s4'	,1.000000e-001,7.189346e+000,'StrMPoleSymplectic4Pass');
FAMLIST{s4}.ElemData.PolynomB(3) = 7.189346e+000;
hcor	=	corrector('hcor'	,0.000000e+000,[0.000000e+000 0.0],'ThinCorrectorPass');
vcor	=	corrector('vcor'	,0.000000e+000,[0.0 0.000000e+000],'ThinCorrectorPass');

g1m1 = marker('g1m1','DriftPass');
g1m2 = marker('g1m2','DriftPass');
g2m1 = marker('g2m1','DriftPass');
g2m2 = marker('g2m2','DriftPass');
dipm1 = marker('dipm1','DriftPass');
dipm2 = marker('dipm2','DriftPass');

% Begin declaration of element groups and lattice.
dip1 = [ dipm1 dip dipm2 ];
dip2 = [ dipm1 dip dipm2 ];
girder1 = [ g1m1 s1 hcor s1 d2 q1 d3 s2 vcor s2 g1m2];
girder2 = [ g2m1 s3 vcor s3 d5 q2 d6 q3 d2 s4 hcor s4 d2 q3 d6 q2 d5 s3 vcor s3 g2m2 ];
girder3 = [ g1m1 s2 vcor s2 d3 q1 d2 s1 hcor s1 g1m2];
cel = [ d1 girder1 d4 dip1 d4 girder2 d4 dip2 d4 girder3 d1 ];
ring = [ cel cel cel cel cel cel cel cel cel cel cel cel cel cel ];


if nargin > 0
    fprintf('Using lattice : %s \n', varargin{1});
    eval(['buildlat(' varargin{1} ');']);
else
    % Default lattice to load
    fprintf('Using default lattice : ring\n');
    buildlat(ring);
end
evalin('caller','global THERING FAMLIST GLOBVAL');
disp('** Done **');
